<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gallant.account.platform.mapper.AccountInfoMapper">
  <resultMap id="BaseResultMap" type="org.gallant.account.platform.entity.AccountInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_type_name" jdbcType="VARCHAR" property="accountTypeName" />
    <result column="account_bank_name" jdbcType="VARCHAR" property="accountBankName" />
    <result column="account_card_code" jdbcType="VARCHAR" property="accountCardCode" />
    <result column="repayment_date" jdbcType="DATE" property="repaymentDate" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="is_active" jdbcType="BIT" property="isActive" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_type_name, account_bank_name, account_card_code, repayment_date, owner, 
    is_active, create_time, modify_time
  </sql>
  <select id="selectByExample" parameterType="org.gallant.account.platform.entity.AccountInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `account_info`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.value}
        </foreach>
      </when>
      <otherwise>
        id, account_type_name, account_bank_name, account_card_code, repayment_date, owner, 
          is_active, create_time, modify_time
      </otherwise>
    </choose>
    from `account_info`
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `account_info`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.value}
        </foreach>
      </when>
      <otherwise>
        id, account_type_name, account_bank_name, account_card_code, repayment_date, owner, 
          is_active, create_time, modify_time
      </otherwise>
    </choose>
    from `account_info`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `account_info`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.gallant.account.platform.entity.AccountInfoExample">
    delete from `account_info`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.gallant.account.platform.entity.AccountInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `account_info` (account_type_name, account_bank_name, 
      account_card_code, repayment_date, owner, 
      is_active, create_time, modify_time
      )
    values (#{accountTypeName,jdbcType=VARCHAR}, #{accountBankName,jdbcType=VARCHAR}, 
      #{accountCardCode,jdbcType=VARCHAR}, #{repaymentDate,jdbcType=DATE}, #{owner,jdbcType=VARCHAR}, 
      #{isActive,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.gallant.account.platform.entity.AccountInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `account_info`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountTypeName != null">
        account_type_name,
      </if>
      <if test="accountBankName != null">
        account_bank_name,
      </if>
      <if test="accountCardCode != null">
        account_card_code,
      </if>
      <if test="repaymentDate != null">
        repayment_date,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountTypeName != null">
        #{accountTypeName,jdbcType=VARCHAR},
      </if>
      <if test="accountBankName != null">
        #{accountBankName,jdbcType=VARCHAR},
      </if>
      <if test="accountCardCode != null">
        #{accountCardCode,jdbcType=VARCHAR},
      </if>
      <if test="repaymentDate != null">
        #{repaymentDate,jdbcType=DATE},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.gallant.account.platform.entity.AccountInfoExample" resultType="java.lang.Long">
    select count(*) from `account_info`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `account_info`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountTypeName != null">
        account_type_name = #{record.accountTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountBankName != null">
        account_bank_name = #{record.accountBankName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountCardCode != null">
        account_card_code = #{record.accountCardCode,jdbcType=VARCHAR},
      </if>
      <if test="record.repaymentDate != null">
        repayment_date = #{record.repaymentDate,jdbcType=DATE},
      </if>
      <if test="record.owner != null">
        owner = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.isActive != null">
        is_active = #{record.isActive,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `account_info`
    set id = #{record.id,jdbcType=INTEGER},
      account_type_name = #{record.accountTypeName,jdbcType=VARCHAR},
      account_bank_name = #{record.accountBankName,jdbcType=VARCHAR},
      account_card_code = #{record.accountCardCode,jdbcType=VARCHAR},
      repayment_date = #{record.repaymentDate,jdbcType=DATE},
      owner = #{record.owner,jdbcType=VARCHAR},
      is_active = #{record.isActive,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.gallant.account.platform.entity.AccountInfo">
    update `account_info`
    <set>
      <if test="accountTypeName != null">
        account_type_name = #{accountTypeName,jdbcType=VARCHAR},
      </if>
      <if test="accountBankName != null">
        account_bank_name = #{accountBankName,jdbcType=VARCHAR},
      </if>
      <if test="accountCardCode != null">
        account_card_code = #{accountCardCode,jdbcType=VARCHAR},
      </if>
      <if test="repaymentDate != null">
        repayment_date = #{repaymentDate,jdbcType=DATE},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.gallant.account.platform.entity.AccountInfo">
    update `account_info`
    set account_type_name = #{accountTypeName,jdbcType=VARCHAR},
      account_bank_name = #{accountBankName,jdbcType=VARCHAR},
      account_card_code = #{accountCardCode,jdbcType=VARCHAR},
      repayment_date = #{repaymentDate,jdbcType=DATE},
      owner = #{owner,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `account_info`
    (account_type_name, account_bank_name, account_card_code, repayment_date, owner, 
      is_active, create_time, modify_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.accountTypeName,jdbcType=VARCHAR}, #{item.accountBankName,jdbcType=VARCHAR}, 
        #{item.accountCardCode,jdbcType=VARCHAR}, #{item.repaymentDate,jdbcType=DATE}, 
        #{item.owner,jdbcType=VARCHAR}, #{item.isActive,jdbcType=BIT}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.modifyTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `account_info` (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'account_type_name' == column.value">
          #{item.accountTypeName,jdbcType=VARCHAR}
        </if>
        <if test="'account_bank_name' == column.value">
          #{item.accountBankName,jdbcType=VARCHAR}
        </if>
        <if test="'account_card_code' == column.value">
          #{item.accountCardCode,jdbcType=VARCHAR}
        </if>
        <if test="'repayment_date' == column.value">
          #{item.repaymentDate,jdbcType=DATE}
        </if>
        <if test="'owner' == column.value">
          #{item.owner,jdbcType=VARCHAR}
        </if>
        <if test="'is_active' == column.value">
          #{item.isActive,jdbcType=BIT}
        </if>
        <if test="'create_time' == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'modify_time' == column.value">
          #{item.modifyTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>